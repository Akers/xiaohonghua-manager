<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.akers.xiaohonghua.project.family.mapper.XhhFamilyMapper">
    
    <resultMap type="XhhFamily" id="XhhFamilyResult">
        <result property="id"    column="id"    />
        <result property="version"    column="version"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="familyName"    column="family_name"    />
        <result property="familyAddress"    column="family_address"    />
        <result property="usrId"    column="usr_id"    />
    </resultMap>

    <resultMap id="XhhFamilyXhhFamilyUserResult" type="XhhFamily" extends="XhhFamilyResult">
        <collection property="xhhFamilyUserList" notNullColumn="sub_id" javaType="java.util.List" resultMap="XhhFamilyUserResult" />
    </resultMap>

    <resultMap type="XhhFamilyUser" id="XhhFamilyUserResult">
        <result property="id"    column="sub_id"    />
        <result property="version"    column="sub_version"    />
        <result property="createBy"    column="sub_create_by"    />
        <result property="createTime"    column="sub_create_time"    />
        <result property="updateBy"    column="sub_update_by"    />
        <result property="updateTime"    column="sub_update_time"    />
        <result property="familyId"    column="sub_family_id"    />
        <result property="usrId"    column="sub_usr_id"    />
        <result property="roleCode"    column="sub_role_code"    />
        <result property="usrName"    column="sub_usr_name"    />
        <result property="roleName"    column="sub_role_name"    />
    </resultMap>

    <sql id="selectXhhFamilyVo">
        select id, version, create_by, create_time, update_by, update_time, family_name, family_address, usr_id from xhh_family
    </sql>

    <select id="selectXhhFamilyList" parameterType="XhhFamily" resultMap="XhhFamilyResult">
        <include refid="selectXhhFamilyVo"/>
        <where>  
            <if test="familyName != null  and familyName != ''"> and family_name like concat('%', #{familyName}, '%')</if>
            <if test="familyAddress != null  and familyAddress != ''"> and family_address like concat('%', #{familyAddress}, '%')</if>
        </where>
    </select>
    
    <select id="selectXhhFamilyById" parameterType="Long" resultMap="XhhFamilyXhhFamilyUserResult">
        select a.id, a.version, a.create_by, a.create_time, a.update_by, a.update_time, a.family_name, a.family_address, a.usr_id,
 b.id as sub_id, b.version as sub_version, b.create_by as sub_create_by, b.create_time as sub_create_time, b.update_by as sub_update_by, b.update_time as sub_update_time, b.family_id as sub_family_id, b.usr_id as sub_usr_id, b.role_code as sub_role_code, b.usr_name as sub_usr_name, b.role_name as sub_role_name
        from xhh_family a
        left join xhh_family_user b on b.family_id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertXhhFamily" parameterType="XhhFamily">
        insert into xhh_family
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="version != null">version,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="familyName != null">family_name,</if>
            <if test="familyAddress != null">family_address,</if>
            <if test="usrId != null">usr_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="version != null">#{version},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="familyName != null">#{familyName},</if>
            <if test="familyAddress != null">#{familyAddress},</if>
            <if test="usrId != null">#{usrId},</if>
         </trim>
    </insert>

    <update id="updateXhhFamily" parameterType="XhhFamily">
        update xhh_family
        <trim prefix="SET" suffixOverrides=",">
            <if test="version != null">version = #{version},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="familyName != null">family_name = #{familyName},</if>
            <if test="familyAddress != null">family_address = #{familyAddress},</if>
            <if test="usrId != null">usr_id = #{usrId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteXhhFamilyById" parameterType="Long">
        delete from xhh_family where id = #{id}
    </delete>

    <delete id="deleteXhhFamilyByIds" parameterType="String">
        delete from xhh_family where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteXhhFamilyUserByFamilyIds" parameterType="String">
        delete from xhh_family_user where family_id in 
        <foreach item="familyId" collection="array" open="(" separator="," close=")">
            #{familyId}
        </foreach>
    </delete>

    <delete id="deleteXhhFamilyUserByFamilyId" parameterType="Long">
        delete from xhh_family_user where family_id = #{familyId}
    </delete>

    <insert id="batchXhhFamilyUser">
        insert into xhh_family_user( id, version, create_by, create_time, update_by, update_time, family_id, usr_id, role_code, usr_name, role_name) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.version}, #{item.createBy}, #{item.createTime}, #{item.updateBy}, #{item.updateTime}, #{item.familyId}, #{item.usrId}, #{item.roleCode}, #{item.usrName}, #{item.roleName})
        </foreach>
    </insert>
</mapper>